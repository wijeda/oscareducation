-extends "base.haml"
-load static
-load compress

-block head
  -compress js
    %script{type: "text/javascript", src: "{% static 'js/professor_validate_exercice.js' %}"}
    %script{type: "text/javascript", src: "{% static 'js/barchart.js' %}"}
    %script{type: "text/javascript", src: "{% static 'js/piechart.js' %}"}
    %script{type: "text/javascript", src: "{% static 'js/previsualize_chart_from_page.js' %}"}
-block breadcrumb
  %ol.breadcrumb
    %li
      %a{href: "{% url 'professor:dashboard' %}"} Oscar
    %li
      %a{href: "{% url 'professor:exercice_list' %}"}
        Questions
    %li.active
      -if exercice
        Formulaire de modification d'une question
      -else
        Formulaire de proposition d'une question

-block content
  .panel.panel-default{ng-app: "oscar", ng-controller: "validateExerciceController"}
    .panel-heading.subpanel
      -if exercice
        Formulaire de modification d'une question
      -else
        Formulaire de proposition d'une question
      .pull-right
        %a.btn.btn-primary.btn-xs{href: "{% url 'professor:exercice_list' %}"}
          Questions

    .panel-body
      .form-group
        %label Compétence
        %select#skill-code.form-control{ng-model: "skillCode"}
          %option{value: ""}
          -for stage in stage_list
            -if stage.name
              %optgroup{label: "{{ stage.name }}"}
                -for skill in stage.skills.all
                  %option{value: "{{ skill.code }}"}
                    =skill.code
                    \-
                    =skill.name

      .form-group.checkbox
        %ul.list-group
          %li.list-group-item.list-group-item-info
            %label
              %input{type: "checkbox", ng-model: "testable_online"}
              Cette question est utilisable en ligne


      .form-group
        %label Image (optionnel)
        %input{id: "upload", ng-model: "image", multiple: "multiple", type: "file", onchange: "angular.element(this).scope().uploadFile(this.files)"}

      .form-group
        %label Énoncé
        %div{text-angular: None, ng-model: "html"}
          %textarea#exercice-html.form-control{rows: 10, ng-model: "html", placeholder: "Syntaxe html disponible, exemple: <b>gras</b> <i>italique</i>... Pour utiliser du latex mettez le entre \( et \) ou $$ et $$"}

        %p.help-block
          Pour ajouter des formules mathématiques dans vos énoncés, utilisez
          \\(\LaTeX\). Le site myscript vous permet de facilement avoir le code \(\LaTeX\)
          d'une formule à partir d'un dessin que vous tracez :
          <a href="https://webdemo.myscript.com/views/math.html">https://webdemo.myscript.com/views/math.html</a>.
          %br
          Copiez ensuite le code \(\LaTeX\) dans l'énoncé, en ajoutant les symboles
          <span>\(</span> au début et <span>\)</span> à la fin.  Ex.: <i><span>\(</span>code latex<span>\)</span></i>

      %form.form-group{ng-submit: "validateExercice()"}
        %ul.list-group{ng-if: "testable_online"}
          %li.list-group-item{ng-repeat: "question in questions", ng-init: "topIndex = $index.toString()"}
            .form-horizontal
              .form-group
                %label.control-label.col-sm-2 Énoncé de la question
                .col-sm-9
                  %input.form-control{type: "text", ng-model: "question.instructions", ng-required: "true"}
                .col-sm-1
                  %button.btn.btn-danger{ng-click: "removeQuestion(question)", type: "button"}
                    %span.glyphicon.glyphicon-remove
              .form-group
                %label.control-label.col-sm-2 Type de la question
                .col-sm-10
                  %select.form-control{ng-model: "question.type", ng-required: "true", ng-change: "onChangeQuestionType(topIndex, question)"}
                    %option{value: ""}
                    %option{value: "text"} Réponse textuelle exacte
                    %option{value: "math-simple"} Réponse mathématique simple
                    %option{value: "math-advanced"} Réponse mathématique avancée
                    %option{value: "radio"} Une seule réponse unique possible parmi toutes (radio)
                    %option{value: "checkbox"} Question à choix multiples (checkbox)
                    %option{value: "graph"} Réponse sur un graphe
                    -# Group 7
                    %optgroup{label: "Graphiques"}
                      %option{value: "chart-barchart"} Réponse sur un graphique en bâtonnets
                      %option{value: "chart-piechart"} Réponse sur un graphique circulaire
                    %option{value: "professor"} Réponse corrigée par le professeur
              .form-group
                %label.control-label.col-sm-2 Source(s)
                .col-sm-10
                  %textarea.form-control{type: "text", ng-model: "question.source", ng-required: "false", rows: "3"}
              .form-group
                %label.control-label.col-sm-2 Indication pour les professeurs
                .col-sm-10
                  %input.form-control{type: "text", ng-model: "question.indication", ng-required: "false"}
            %ul.list-group
              %li.list-group-item{ng-if: "question.type != \"professor\"", ng-repeat: "answer in question.answers", ng-init: "answerIndex = $index.toString()"}
                .form-horizontal{ng-if: "question.type != \"graph\""}
                  .form-group
                    %label.col-sm-2.control-label Réponse possible :
                    .col-sm-9
                      %input.form-control{type: "text", ng-if: "!question.type.startsWith(\"math\")", ng-model: "answer.text", ng-required: "true"}
                      %span{ng-if: "question.type == \"math-simple\"", ng-required: "true"}
                        %textarea.keyboard
                        %span.mathquill{class: "mathquill-{& topIndex &} mathquill-{& topIndex &}-{& answerIndex &}", data-keyboard-type: "{& question.type &}"}
                      %span{ng-if: "question.type == \"math-advanced\"", ng-required: "true"}
                        %textarea.keyboard
                        %span.mathquill{class: "mathquill-{& topIndex &} mathquill-{& topIndex &}-{& answerIndex &}", data-keyboard-type: "{& question.type &}"}
                    .col-sm-1
                      %button.btn.btn-danger.btn-sm{ng-click: "removeAnswer(question, answer)", type: "button"}
                        %span.glyphicon.glyphicon-remove
                  .form-group.no-bottom{ng-if: "question.type != \"text\" && ! question.type.startsWith(\"math\")"}
                    %label.control-label.col-sm-2 Réponse correcte ?
                    .col-sm-1
                      %input.form-control{type: "checkbox", ng-change: "question.type == \"radio\" && answer.correct === true && onChangeRadio(question, answer)", ng-model: "answer.correct"}

                .form-horizontal{ng-if: "question.type == \"chart-barchart\""}
                  .form-group
                    %label.control-label.col-sm-3 Nom de l'axe des abscisses
                    .col-sm-9
                      %input.form-control{id: "barGraphX",class: "barGraphX",type: "text", ng-model: "barGraphX", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 Nom de l'axe des ordonnées
                    .col-sm-9
                       %input.form-control{id: "barGraphY", class:"barGraphY",type: "text", ng-model: "barGraphY", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 Définir le pas des abscisses
                    .col-sm-9
                      %input.form-control{id: "stepX",class: "stepX",type: "number", ng-model: "stepX", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 Définir le pas des ordonnées
                    .col-sm-9
                      %input.form-control{id: "stepY",class: "stepY",type: "number", ng-model: "stepY", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 Abscisse minimale
                    .col-sm-9
                      %input.form-control{id: "zeroX",class: "zeroX",type: "number", ng-model: "zeroX", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 Ordonnée minimale
                    .col-sm-9
                      %input.form-control{id: "zeroY",class: "zeroY",type: "number", ng-model: "zeroY", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 Abscisse maximale
                    .col-sm-9
                      %input.form-control{id: "maxX",class: "maxX",type: "number", ng-model: "maxX", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 Ordonnée maximale
                    .col-sm-9
                      %input.form-control{id: "maxY",class: "maxY",type: "number", ng-model: "maxY", ng-required: "false"}
                  .form-group
                    %label.control-label.col-sm-3 precision des barres
                    .col-sm-9
                      %input.form-control{id: "precisionValue",class: "precisionValue",type: "number", ng-model: "precisionValue", ng-required: "false"}
                  %button.btn.btn-success.btn-sm.btn-updateBar{ng-model: "createBarChart", onclick: "chart_btnUpdate($(this))", type: "button"}
                    %span.glyphicon.glyphicon-ok
                    Mettre à jour le graphique
                  .jxgbox.chartQuestion.chartQuestionValidation.chartQuestionBarchart#jxgbox{id:barChartForm,style:"width:100%; height:676px;margin-top:20px;margin-bottom:20px;",data-chart-type:"chart-barchart",value:"chart-barchart"}
                  .form-group
                    %label.control-label.col-sm-3 Ajouter une nouvelle ordonnée
                    .col-sm-3
                      %input.form-control{id: "newBarY",class: "newBarY",type: "number", ng-model: "newBarY", ng-required: "false"}
                    .col-sm-2
                      %button.btn.btn-success.btn-addBar{onclick: "chart_add($(this))", type: "button"}
                        %span.glyphicon.glyphicon-plus
                        Ajouter
                    .col-sm-2
                      %button.btn.btn-danger.btn-deleteBar{onclick: "chart_deleteLastBar($(this))", type: "button"}
                        %span.glyphicon.glyphicon-minus
                        Supprimer la dernière
                  -# = .jxgbox.chartQuestion.chartQuestionValidation.chartQuestionBarchart#jxgbox{style:"width:100%; height:676px;",data-chart-type:"piechart",data-chart-percent:'[20,30,50]',data-chart-label:'["math","francais","Sciences"]'}

                .form-horizontal{ng-if: "question.type == \"chart-piechart\""}
                  .form-group
                    %label.control-label.col-sm-3 Amplitude du secteur
                    .col-sm-3
                      %input.form-control{id: "sector",class: "sector",type: "number", ng-model: "sector", ng-required: "false"}
                    %label.control-label.col-sm-3 Nom du secteur
                    .col-sm-3
                      %input.form-control{id: "labelPie",class: "labelPie",type: "text", ng-model: "labelPie", ng-required: "false"}
                  .form-group
                    .col-sm-2
                      %button.btn.btn-success.btn-addPie{onclick: "chart_createPieChartFromForm()", type: "button"}
                        %span.glyphicon.glyphicon-plus
                        Ajouter
                    .col-sm-2
                      %button.btn.btn-danger.btn-deletePie{onclick: "chart_deleteLastPie($(this))", type: "button", class:"btn-deletePie"}
                        %span.glyphicon.glyphicon-minus
                        Supprimer la dernière
                  .jxgbox.chartQuestion.chartQuestionValidation.chartQuestionPiechart#jxgbox{id:pieChartForm,style:"width:100%; height:676px;margin-top:20px;margin-bottom:20px;",data-chart-type:"chart-piechart",value:"chart-piechart"}
                  -# = .jxgbox.chartQuestion.chartQuestionValidation#jxgbox{style:"width:100%; height:676px;",data-chart-type:"piechart",data-chart-percent:'[20,30,50]',data-chart-label:'["math","francais","Sciences"]'}

                .form-horizontal{ng-if: "question.type == \"graph\""}
                  .form-group
                    %label.control-label.col-sm-2 Type
                    .col-sm-9
                      %select.form-control{kg-required: "true", ng-model: "answer.graph.type", ng-change: "onChangeGraphAnswerType(answer.graph)"}
                        %option{value: ""}
                        %option{value: "point"} Point
                    .col-sm-1
                      %button.btn.btn-danger.btn-sm{ng-click: "removeAnswer(question, answer)", type: "button"}
                        %span.glyphicon.glyphicon-remove
                  -# ng-if: point
                  .form-group{ng-if: "answer.graph.type == \"point\""}
                    %label.control-label.col-sm-2 Coordonnées
                    .form-inline.col-sm-10
                      .input-group.col-sm-5
                        .input-group-addon X
                        %input.form-control{type: "number", ng-required: "true", placeholder: "0", ng-model: "answer.graph.coordinates.X"}
                      .input-group.col-sm-5
                        .input-group-addon Y
                        %input.form-control{type: "number", ng-required: "true", placeholder: "0", ng-model: "answer.graph.coordinates.Y"}

            %button.btn.btn-success.btn-sm{ng-if: "question.type != \"professor\"", ng-click: "addAnswer(topIndex, question)", type: "button"}
              %span.glyphicon.glyphicon-plus
              nouvelle réponse possible

        .form-group
          %button.btn.btn-success{ng-click: "addQuestion()", type: "button"}
            %span.glyphicon.glyphicon-plus
            nouvelle question

        .form-group
          %button#validate-yaml.btn.btn-primary{type: "submit"}
            Prévisualiser
          %button#submit-pull-request.btn.btn-primary{ng-click: "proposeToOscar()", ng-if: "exerciceIsValid", ng-required: "exerciceIsValid", type: "button"}
            %span{ng-if: "forTestExercice"}
              Utiliser pour mon test
            %span{ng-if: "!forTestExercice"}
              -if exercice
                Enregistrer
              -else
                Proposer à Oscar

      #yaml-validation-result{ng-bind-html: "yamlValidationResult"}

      #exercice-rendering-panel.panel.panel-default{ng-if: "exerciceIsValid"}
        .panel-heading
          Rendu de la question

        .panel-body

          #exercice-rendering-html.well{ng-if: "htmlRendering != \"\" || base64img != \"\""}
            %img{ng-if: "base64img", src: "{& base64img &}", class: "img-responsive"}
            %div{ng-bind-html: "htmlRendering"}

          #exercice-rendering-yaml{ng-if: "yamlRendering != \"\"", ng-bind-html: "yamlRendering"}

  :css
    body {
      padding-bottom: 200px;
    }

    .hidden-math-form {
      display: inline;
}
